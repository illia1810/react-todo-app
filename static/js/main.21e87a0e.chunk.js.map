{"version":3,"sources":["logo.svg","components/InputSelect.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["InputSelect","setInputText","todos","setTodos","inputText","setStatus","value","type","className","onChange","e","console","log","target","placeholder","onClick","preventDefault","text","done","id","Math","random","class","name","Todo","todo","map","item","filter","el","TodoList","filteredActions","App","useState","status","setFilteredActions","useEffect","userFilteredActions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21e87a0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst InputSelect = ({setInputText, todos, setTodos, inputText, setStatus}) =>{\r\n    const inputTextHandler = (e) =>{\r\n        console.log(e);\r\n        setInputText(e.target.value);\r\n    }\r\n    const submitTodoAction = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, done: false, id: Math.random()*1000}\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    const userChoose = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    return(\r\n        <form>\r\n            <input value={inputText} type=\"text\" className=\"todo-input\" onChange={inputTextHandler} placeholder=\"Type new event...\" />\r\n            <button className=\"btn btn-primary\" onClick={submitTodoAction}>Add</button>\r\n            <div class=\"select\">\r\n                <select onChange={userChoose} name=\"actions\" className=\"filter-todo\">\r\n                    <option value=\"all\">All Tasks</option>\r\n                    <option value=\"done\">Done</option>\r\n                    <option value=\"undone\">Undone</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default InputSelect;","import React from 'react';\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    const deleteEvent = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    }\r\n\r\n    const doneEvent = () => {\r\n        setTodos(todos.map(item => {\r\n            if (item.id === todo.id) {\r\n                return{\r\n                    ...item, done: !item.done\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.done ? \"done\" : \"\"}`}>{text}</li>\r\n            <button className=\"done-btn\" onClick={doneEvent}>Done</button>\r\n            <button className=\"remove-btn\" onClick={deleteEvent}>Remove</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\n\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredActions}) =>{\r\n    return(\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredActions.map((todo => (\r\n                    <Todo setTodos={setTodos} todos={todos} text={todo.text} key={todo.id} todo={todo} />\r\n                )))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './components/style.css'\nimport InputSelect from './components/InputSelect';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredActions, setFilteredActions] = useState([]);\n\n  useEffect(() => {\n    userFilteredActions();\n  }, [todos, status])\n  const userFilteredActions = () =>{\n    switch(status){\n      case \"done\":\n        setFilteredActions(todos.filter(todo => todo.done === true));\n        break;\n      case \"undone\":\n        setFilteredActions(todos.filter(todo => todo.done === false));\n        break;\n      default:\n        setFilteredActions(todos);\n        break;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Todo List</h1>\n        <InputSelect inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus} />\n        <TodoList setTodos={setTodos} todos={todos} filteredActions={filteredActions}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}